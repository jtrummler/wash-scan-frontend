---
format:
  html:
    theme: [source/custom.scss, none]
editor: source
execute:
  echo: false
  output: false
---

::: setup
{{< include source/scrollytelling.qmd >}}

```{r}
#| include: false
# Read functions & packages
# Only the github version of leaflet supports terra, in place of raster, which is now required as sp (on which raster depends) is being deprecated
#devtools::install_github('rstudio/leaflet')
#source()
# source("source/fns.R") #not sure why fns is not recognized
# library(terra)
# library(sf)
# library(leaflet)
# library(yaml)
# library(stringr)
# library(dplyr)
# library(plotly)
# library(ggspatial)
# library(tidyterra)
# library(cowplot)
# library(glue)
# install.packages("readr")
# library(readr)
install.packages("ggtext")
library(ggtext)
source("source/fns.R", chdir = TRUE)
source("source/helpers.R")

city_dir <- file.path("mnt/city-directories") # done
user_input_dir <- file.path(city_dir, "01-user-input/")
process_output_dir <- file.path(city_dir, "02-process-output/")
#spatial_dir <- file.path(process_output_dir, "spatial/")
spatial_dir <- file.path('C:/Users/jtrum/Wash/data_processing/spatial')
output_dir <- file.path(city_dir, "03-render-output/")
styled_maps_dir <- "generated/styled-maps/"

# City parameters
city_params <- read_yaml(file.path(user_input_dir, "city_inputs.yml"))
# cities <- list.files("cities")
city <- city_params$city_name
city_string <- tolower(city) %>% stringr::str_replace_all(" ", "-")
country <- city_params$country_name

# Load map layer parameters
layer_params <- read_yaml('source/layers.yml')
```

```{r}
#| freeze: auto
# source('_pre-render.R')
```

```{r}
#| include: false
# Visualization parameters (Am I using all of them?)
# Interactivve Plots (Leaflet)
basemap_opacity <- 0.3
legend_opacity <- 0.8
vwidth <- 900
vheight <- vwidth

# Static map
layer_alpha <- 0.8
map_width <- 6.9
map_height <- 5.9
aspect_ratio <- map_width / map_height

# this is to enable fractional zoom in mapshot
useragent <- 'Mozilla/5.0 (compatible; MSIE 10.6; Windows NT 6.1; Trident/5.0; InfoPath.2; SLCC1; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 2.0.50727) 3gpp-gba UNTRUSTED/1.0'
```

---
title: "`r paste(city, country, sep = ', ')`, Water and Sanitation Scan"
---

```{r}
# Get text
city_text <- read_md(file.path(user_input_dir, "text-files/manual-text.md"))
generic_text <- read_yaml("source/generic-text.yml")
slide_texts <- merge_lists(city_text, generic_text)
```

```{r}
#| include: false

# Define the AOI
aoi <- st_zm(st_read(file.path(user_input_dir, "AOI/aoiLuanda.geojson")))
aoi_bounds <- st_bbox(aoi)
static_map_bounds <- aspect_buffer(aoi, aspect_ratio, buffer_percent = 0.05)

# Create basemaps
## Interactive: Inititate the map here, will build on it in each "slide"
all_maps <- plot_basemap("vector")
## Static:
zoom <- round(14.6 + -0.00015 * units::drop_units(sqrt(st_area(aoi))))
tiles <- annotation_map_tile(type = "cartolight", zoom = zoom)

# Keep track of added layers
added_layers <- c()
```
:::

::: topbar
# {{< meta title >}}

::: navigation
```{r}
#| output: asis
# Dynamically add sections to table of contents ... there's probably a better way?
sections <- readLines("index.qmd") %>%
  subset(str_detect(., "^##")) %>% str_replace("# ", "- ") %>% str_replace_all("#", "  ")

anchors <- sections %>% str_extract("^\\s*- (.*$)", group = T) %>% tolower() %>% str_replace_all(c("[^a-z\\s]" = "", "\\s+" = "-")) %>%
  str_replace("(.*)", "(#\\1)")

paste0(str_replace(sections, "(^\\s*- )(.+$)", "\\1[\\2]"), anchors) %>% { cat("- <span id='dynamic-header'>City Scan</span>  &or;", ., sep = "\n") }
```

[Inputs version](https://bennotkin.quarto.pub/gagarin-city-scan-form/)
:::
:::

::: text-column
# {{< meta title >}}
## Executive Summary

```{r}
#| output: asis
print_slide_text(slide_texts$executive_summary$executive_summary)
```

## Setting the Context

```{r}
#| output: asis
print_slide_text(slide_texts$setting_the_context$context)
```

### Basic City Information

```{r}
#| output: asis
print_slide_text(slide_texts$setting_the_context$basic_city_info)
```

```{r}
# Add a map layer? But it's just the AOI
# AOI in black, catchment in blue?
```

## Geography

### Hydrography

```{r}
hydrography <- fuzzy_read(spatial_dir, "luanda_hydrography.shp", vect)

# Interactive Plot (Leaflet)
add_hydrography_layer <- create_layer_function(data = rast_as_vect(hydrography), yaml_key = "hydrography")
all_maps <- add_hydrography_layer(all_maps)
added_layers <- c(added_layers, "hydrography")

# Static plot (PNG)
plot_hydrography <- plot_static(data = hydrography, yaml_key = "hydrography")
save_plot(plot = plot_hydrography, filename = "hydrography.png", directory = styled_maps_dir)
plot_land_cover
```

```{r}
#| output: asis
print_slide_text(slide_texts$geography$hydrography)
```

### Dams and Reservoirs

```{r}
dams_reservoirs <- fuzzy_read(spatial_dir, "luanda_dams_reservoirs.shp", vect)

# Interactive Plot (Leaflet)
add_dams_reservoirs_layer <- create_layer_function(data = dams_reservoirs, yaml_key = "dams-and-reservoirs")
all_maps <- add_dams_reservoirs_layer(all_maps)
added_layers <- c(added_layers, "dams-and-reservoirs")

# Static plot (PNG)
plot_dams_reservoirs <- plot_static(data = dams_reservoirs, yaml_key = "dams-and-reservoirs")
save_plot(plot = plot_hydrography, filename = "dams_reservoirs.png", directory = styled_maps_dir)
plot_dams_reservoirs
```

```{r}
#| output: asis
print_slide_text(slide_texts$geography$dams_reservoirs)
```

### Land Cover

```{r}
land_cover <- fuzzy_read(spatial_dir, "luanda_lc.tif", rast)
values(land_cover)[values(land_cover) == 0] <- NA

# Interactive Plot (Leaflet)
add_land_cover_layer <- create_layer_function(data = rast_as_vect(land_cover), yaml_key = "land-cover")
all_maps <- add_land_cover_layer(all_maps)
added_layers <- c(added_layers, "land-cover")

# Static plot (PNG)
plot_land_cover <- plot_static(data = land_cover, yaml_key = "land_cover")
save_plot(plot = plot_land_cover, filename = "land_cover.png", directory = styled_maps_dir)
plot_land_cover
```

```{r}
#| output: asis
print_slide_text(slide_texts$geography$land_cover)
```

### Precipitation

```{r}
# Data point - work on html plot
```

```{r}
#| output: asis
print_slide_text(slide_texts$geography$precipitation)
```

### Temperature

```{r}
# Data point - work on html plot
```

```{r}
#| output: asis
print_slide_text(slide_texts$geography$temperature)
```

### Potential Evapotranspiration

```{r}
# Data point - work on html plot
```

```{r}
#| output: asis
print_slide_text(slide_texts$geography$potential_evapotranspiration)
```

### Runoff

```{r}
# Get Rui advice - 4 different layers
```

```{r}
#| output: asis
print_slide_text(slide_texts$geography$runoff)
```

## Water Related Hazards

### Flooding

```{r}
flooding <- fuzzy_read(spatial_dir, "fathom_luanda.geojson", vect)

# Interactive Plot (Leaflet)
add_flooding_layer <- create_layer_function(data = flooding, yaml_key = "flooding")
all_maps <- add_flooding_layer(all_maps)
added_layers <- c(added_layers, "flooding")

# Static plot (PNG)
plot_flooding <- plot_static(data = flooding, yaml_key = "flooding")
save_plot(plot = plot_flooding, filename = "flooding.png", directory = styled_maps_dir)
plot_flooding
```


```{r}
#| output: asis
print_slide_text(slide_texts$water_hazards$flooding)
```


<!-- ```{r}
#| include: false
ndwi <- fuzzy_read(spatial_dir, "ndwi", rast)

# Interactive Plot (Leaflet)
add_ndwi_layer <- create_layer_function(data = rast_as_vect(ndwi), yaml_key = "ndwi")
all_maps <- add_ndwi_layer(all_maps)
added_layers <- c(added_layers, "ndwi")

# Static plot (PNG)
plot_ndwi <- plot_static(data = ndwi, yaml_key = "ndwi")
save_plot(plot = plot_ndwi, filename = "ndwi.png", directory = styled_maps_dir) -->


```{r}
#| output: asis
print_slide_text(slide_texts$water_hazards$ndwi)
```

### Normalized Difference Moisture Index

```{r}
#| include: false
ndmi_annual <- fuzzy_read(spatial_dir, "ndmi_annual_luanda.tif", rast)
ndmi_seasonal <- fuzzy_read(spatial_dir, "ndmi_seasonal_luanda.tif", rast)

# Interactive Plot (Leaflet)
add_ndmi_annual_layer <- create_layer_function(
  data = rast_as_vect(ndmi_annual), 
  yaml_key = "ndmi-annual",
  group_id = "normalized-difference-moisture-index")

add_ndmi_seasonal_layer <- create_layer_function(
  data = rast_as_vect(ndmi_annual), 
  yaml_key = "ndmi-seasonal",
  group_id = "normalized-difference-moisture-index")

all_maps <- add_ndmi_annual_layer(all_maps)
all_maps <- add_ndmi_seasonal_layer(all_maps)

added_layers <- c(added_layers, "normalized-difference-moisture-index")

# Static plot (PNG)
# plot_ndmi_annual <- plot_static(data = ndmi_annual, yaml_key = "ndmi-annual")
# save_plot(plot = plot_ndmi_annual, filename = "ndmi_annual.png", directory = styled_maps_dir)
```

```{r}
#| output: asis
print_slide_text(slide_texts$water_hazards$ndmi)
```


### Standardized Precipitation Evapotranspiration Index

```{r}
#| include: false
spei <- fuzzy_read(spatial_dir, "spei_luanda.tif", rast)

# Interactive Plot (Leaflet)
add_spei_layer <- create_layer_function(
  data = rast_as_vect(spei), 
  yaml_key = "spei",
  group_id = "standardized-precipitation-evapotranspiration-index")

all_maps <- add_spei_layer(all_maps)
added_layers <- c(added_layers, "standardized-precipitation-evapotranspiration-index")

# Static plot (PNG)
# plot_spei <- plot_static(data = spei, yaml_key = "spei")
# save_plot(plot = plot_spei, filename = "spei.png", directory = styled_maps_dir)
```

```{r}
#| output: asis
print_slide_text(slide_texts$water_hazards$spei)
```

### Water Pollution

```{r}
# data points
```

```{r}
#| output: asis
print_slide_text(slide_texts$water_hazards$water_pollution)
```

## Water Service Delivery

### Water Infrastructure

```{r}
water_infrastructure <- fuzzy_read(spatial_dir, "water_infrastructure_luanda.shp", vect)

# Interactive Plot (Leaflet)
add_water_infrastructure_layer <- create_layer_function(
  data = water_infrastructure, 
  yaml_key = "water-infrastructure",
  group_id = "water-infrastructure")

all_maps <- add_hydrography_layer(all_maps)
added_layers <- c(added_layers, "water_infrastructure")

# # Static plot (PNG)
# plot_water_infrastructure <- plot_static(data = water_infrastructure, yaml_key = "water-infrastructure")
# save_plot(plot = plot_water_infrastructure, filename = "water_infrastructure.png", directory = styled_maps_dir)
# plot_land_cover
```

```{r}
#| output: asis
print_slide_text(slide_texts$service_delivery$water_infrastructure)
```

### Water Infrastructure with Flood Overlay

```{r}
water_infrastructure <- fuzzy_read(spatial_dir, "water_infrastructure_luanda.shp", vect)
flooding <- fuzzy_read(spatial_dir, "fathom_luanda.geojson", vect)

# Interactive Plot (Leaflet)
add_water_infrastructure_layer <- create_layer_function(
  data = water_infrastructure, 
  yaml_key = "water-infrastructure",
  group_id = "water-infrastructure-with-flood-overlay")

add_flooding_layer <- create_layer_function(
  data = flooding, 
  yaml_key = "flooding",
  group_id = "water-infrastructure-with-flood-overlay")

all_maps <- add_water_infrastructure_layer(all_maps)
all_maps <- add_flooding_layer(all_maps)
added_layers <- c(added_layers, "water-infrastructure-with-flood-overlay")

all_maps <- add_hydrography_layer(all_maps)
added_layers <- c(added_layers, "water_infrastructure")

# # Static plot (PNG)
# plot_water_infrastructure <- plot_static(data = water_infrastructure, yaml_key = "water-infrastructure")
# save_plot(plot = plot_water_infrastructure, filename = "water_infrastructure.png", directory = styled_maps_dir)
# plot_land_cover
```

```{r}
#| output: asis
print_slide_text(slide_texts$service_delivery$water_infrastructure_flood)
```

### Schools and Hospitals with Flood Overlay

```{r}
#| include: false
schools_hospitals <- fuzzy_read(spatial_dir, "schools_hospitals_luanda.shp", vect)
flooding <- fuzzy_read(spatial_dir, "fathom_luanda.geojson", vect)

# Interactive Plot (Leaflet)
add_water_infrastructure_layer <- create_layer_function(
  data = water_infrastructure, 
  yaml_key = "water-infrastructure",
  group_id = "water-infrastructure-with-flood-overlay")

add_flooding_layer <- create_layer_function(
  data = flooding, 
  yaml_key = "flooding",
  group_id = "water-infrastructure-with-flood-overlay")

all_maps <- add_water_infrastructure_layer(all_maps)
all_maps <- add_flooding_layer(all_maps)
added_layers <- c(added_layers, "water-infrastructure-with-flood-overlay")

all_maps <- add_hydrography_layer(all_maps)
added_layers <- c(added_layers, "water_infrastructure")

# # Static plot (PNG)
# plot_water_infrastructure <- plot_static(data = water_infrastructure, yaml_key = "water-infrastructure")
# save_plot(plot = plot_water_infrastructure, filename = "water_infrastructure.png", directory = styled_maps_dir)
# plot_land_cover
```


```{r}
#| output: asis
print_slide_text(slide_texts$service_delivery$schools_hospitals_flood)
```

### Access to Improved Water Sources with Built-Up Underlay and Schools and Hospitals Overlay

```{r}
#| include: false
wsf <- fuzzy_read(spatial_dir, "built_up_luanda.geojson", vect)
improved_water <- fuzzy_read(spatial_dir, "improved_water_luanda.geojson", vect)
schools_hospitals(spatial_dir, "schools_hospitals_luanda.geojson", vect)

# Interactive Plot (Leaflet)
add_wsf_layer <- create_layer_function(
  data = wsf,
  yaml_key = "wsf",
  group_id = "access-to-improved-water-sources-with-built-up-underlay-and-schools-and-hospitals-overlay"
)

add_improved_water_layer <- create_layer_function(
  data = improved_water, 
  yaml_key = "improved-water",
  group_id = "access-to-improved-water-sources-with-built-up-underlay-and-schools-and-hospitals-overlay"
)

add_schools_hospitals_layer <- create_layer_function(
  data = schools_hospitals, 
  yaml_key = "schools-hospitals",
  group_id = "access-to-improved-water-sources-with-built-up-underlay-and-schools-and-hospitals-overlay"
)

# test ... plot_basemap() replace at first all_maps

all_maps <- add_wsf_layer(all_maps)
all_maps <- add_improved_water_layer(all_maps)
all_maps <- add_schools_hospitals_layer(all_maps)

added_layers <- c(added_layers, "access-to-improved-water-sources-with-built-up-underlay-and-schools-and-hospitals-overlay")

# Static plot (PNG)
# plot_ndmi_annual <- plot_static(data = ndmi_annual, yaml_key = "ndmi-annual")
# save_plot(plot = plot_ndmi_annual, filename = "ndmi_annual.png", directory = styled_maps_dir)
```

```{r}
#| output: asis
print_slide_text(slide_texts$service_delivery$improved_water_builtup_schools_hospitals)
```

### Access to Improved Water Sources with Children and Elderly Overlay

```{r}
#| include: false
improved_water <- fuzzy_read(spatial_dir, "improved_water_luanda.geojson", vect)
children <- fuzzy_read(spatial_dir, "children_luanda.geojson", vect)
elderly <- fuzzy_read(spatial_dir, "elderly_luanda.geojson", vect)

# Interactive Plot (Leaflet)
add_improved_water_layer <- create_layer_function(
  data = improved_water, 
  yaml_key = "improved-water",
  group_id = "access-to-improved-water-sources-with-children-and-elderly-overlay"
)

add_children_layer <- create_layer_function(
  data = children, 
  yaml_key = "children",
  group_id = "access-to-improved-water-sources-with-children-and-elderly-overlay"
)

add_elderly_layer <- create_layer_function(
  data = elderly, 
  yaml_key = "elderly",
  group_id = "access-to-improved-water-sources-with-children-and-elderly-overlay"
)
# test ... plot_basemap() replace at first all_maps


all_maps <- add_improved_water_layer(all_maps)
all_maps <- add_children_layer(all_maps)
all_maps <- add_elderly_layer(all_maps)

added_layers <- c(added_layers, "access-to-improved-water-sources-with-children-and-elderly-overlay")

# Static plot (PNG)
# plot_ndmi_annual <- plot_static(data = ndmi_annual, yaml_key = "ndmi-annual")
# save_plot(plot = plot_ndmi_annual, filename = "ndmi_annual.png", directory = styled_maps_dir)
```

```{r}
#| output: asis
print_slide_text(slide_texts$service_delivery$improved_water_children_elderly)
```

## Sanitation and Hygeine

### Access to Improved Sanitation Sources with Built-Up Underlay and Schools and Hospitals Overlay

```{r}
#| include: false
wsf <- fuzzy_read(spatial_dir, "built_up_luanda.geojson", vect)
improved_sanitation <- fuzzy_read(spatial_dir, "improved_sanitation_luanda.geojson", vect)
schools_hospitals(spatial_dir, "schools_hospitals_luanda.geojson", vect)

# Interactive Plot (Leaflet)
add_wsf_layer <- create_layer_function(
  data = wsf,
  yaml_key = "wsf",
  group_id = "access-to-improved-sanitation-sources-with-built-up-underlay-and-schools-and-hospitals-overlay"
)

add_improved_sanitation_layer <- create_layer_function(
  data = improved_sanitation, 
  yaml_key = "improved-sanitation",
  group_id = "access-to-improved-sanitation-sources-with-built-up-underlay-and-schools-and-hospitals-overlay"
)

add_schools_hospitals_layer <- create_layer_function(
  data = schools_hospitals, 
  yaml_key = "schools-hospitals",
  group_id = "access-to-improved-sanitation-sources-with-built-up-underlay-and-schools-and-hospitals-overlay"
)

# test ... plot_basemap() replace at first all_maps

all_maps <- add_wsf_layer(all_maps)
all_maps <- add_improved_sanitation_layer(all_maps)
all_maps <- add_schools_hospitals_layer(all_maps)

added_layers <- c(added_layers, "access-to-improved-sanitation-sources-with-built-up-underlay-and-schools-and-hospitals-overlay")
```

```{r}
#| output: asis
print_slide_text(slide_texts$sanitation_and_hygeine$improved_sanitation_builtup_schools_hospitals)
```

### Access to Improved Santiation Sources with Children and Elderly Overlay

```{r}
#| include: false
improved_sanitation <- fuzzy_read(spatial_dir, "improved_sanitation_luanda.geojson", vect)
children <- fuzzy_read(spatial_dir, "children_luanda.geojson", vect)
elderly <- fuzzy_read(spatial_dir, "elderly_luanda.geojson", vect)

# Interactive Plot (Leaflet)
add_improved_sanitation_layer <- create_layer_function(
  data = improved_sanitation, 
  yaml_key = "improved-sanitation",
  group_id = "access-to-improved-sanitation-sources-with-children-and-elderly-overlay"
)

add_children_layer <- create_layer_function(
  data = children, 
  yaml_key = "children",
  group_id = "access-to-improved-sanitation-sources-with-children-and-elderly-overlay"
)

add_elderly_layer <- create_layer_function(
  data = elderly, 
  yaml_key = "elderly",
  group_id = "access-to-improved-sanitation-sources-with-children-and-elderly-overlay"
)
# test ... plot_basemap() replace at first all_maps


all_maps <- add_improved_sanitation_layer(all_maps)
all_maps <- add_children_layer(all_maps)
all_maps <- add_elderly_layer(all_maps)

added_layers <- c(added_layers, "access-to-improved-sanitation-sources-with-children-and-elderly-overlay")

# Static plot (PNG)
# plot_ndmi_annual <- plot_static(data = ndmi_annual, yaml_key = "ndmi-annual")
# save_plot(plot = plot_ndmi_annual, filename = "ndmi_annual.png", directory = styled_maps_dir)
```

```{r}
#| output: asis
print_slide_text(slide_texts$sanitation_and_hygeine$improved_sanitation_children_elderly)
```

### Access to Open Defecation Sources with Built-Up Underlay and Schools and Hospitals Overlay

```{r}
#| include: false
wsf <- fuzzy_read(spatial_dir, "built_up_luanda.geojson", vect)
open_defecation <- fuzzy_read(spatial_dir, "open_defecation_luanda.geojson", vect)
schools_hospitals(spatial_dir, "schools_hospitals_luanda.geojson", vect)

# Interactive Plot (Leaflet)
add_wsf_layer <- create_layer_function(
  data = wsf,
  yaml_key = "wsf",
  group_id = "access-to-open-defecation-sources-with-built-up-underlay-and-schools-and-hospitals-overlay"
)

add_open_defecation_layer <- create_layer_function(
  data = open_defecation, 
  yaml_key = "open-defecation",
  group_id = "access-to-open-defecation-sources-with-built-up-underlay-and-schools-and-hospitals-overlay"
)

add_schools_hospitals_layer <- create_layer_function(
  data = schools_hospitals, 
  yaml_key = "schools-hospitals",
  group_id = "access-to-open-defecation-sources-with-built-up-underlay-and-schools-and-hospitals-overlay"
)

# test ... plot_basemap() replace at first all_maps

all_maps <- add_wsf_layer(all_maps)
all_maps <- add_open_defecation(all_maps)
all_maps <- add_schools_hospitals_layer(all_maps)

added_layers <- c(added_layers, "access-to-open-defecation-sources-with-built-up-underlay-and-schools-and-hospitals-overlay")
```

```{r}
#| output: asis
print_slide_text(slide_texts$sanitation_and_hygeine$open_defecation_builtup_schools_hospitals)
```

### Access to Open Defecation Sources with Children, Women, and Elderly Overlay

```{r}
#| include: false
open_defecation <- fuzzy_read(spatial_dir, "open_defecation_luanda.geojson", vect)
children <- fuzzy_read(spatial_dir, "children_luanda.geojson", vect)
elderly <- fuzzy_read(spatial_dir, "elderly_luanda.geojson", vect)
women <- fuzzy_read(spatial_dir, "women_luanda.geojson", vect)

# Interactive Plot (Leaflet)
add_open_defecation_layer <- create_layer_function(
  data = improved_water, 
  yaml_key = "improved-sanitation",
  group_id = "access-to-open-defecation-sources-with-children-women-and-elderly-overlay"
)

add_children_layer <- create_layer_function(
  data = children, 
  yaml_key = "children",
  group_id = "access-to-improved-sanitation-sources-with-children-women-and-elderly-overlay"
)

add_elderly_layer <- create_layer_function(
  data = elderly, 
  yaml_key = "elderly",
  group_id = "access-to-improved-sanitation-sources-with-children-women-and-elderly-overlay"
)

add_women_layer <- create_layer_function(
  data = women, 
  yaml_key = "women",
  group_id = "access-to-improved-sanitation-sources-with-children-women-and-elderly-overlay"
)
# test ... plot_basemap() replace at first all_maps


all_maps <- add_improved_sanitation_layer(all_maps)
all_maps <- add_children_layer(all_maps)
all_maps <- add_elderly_layer(all_maps)

added_layers <- c(added_layers, "access-to-improved-sanitation-sources-with-children-women-and-elderly-overlay")

# Static plot (PNG)
# plot_ndmi_annual <- plot_static(data = ndmi_annual, yaml_key = "ndmi-annual")
# save_plot(plot = plot_ndmi_annual, filename = "ndmi_annual.png", directory = styled_maps_dir)
```

```{r}
#| output: asis
print_slide_text(slide_texts$sanitation_and_hygeine$open_defecation_children_elderly_women)
```

